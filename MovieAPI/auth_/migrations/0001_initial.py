# Generated by Django 3.2 on 2021-04-16 23:04

import auth_.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MainUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_name', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, max_length=50, unique=True, verbose_name='user name')),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email already exists.'}, max_length=254, unique=True, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='is_staff')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', auth_.models.MainUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='last name')),
                ('country', models.IntegerField(blank=True, choices=[(1, 'Afghanistan'), (2, 'Albania'), (3, 'Algeria'), (4, 'American Samoa'), (5, 'Andorra'), (6, 'Angola'), (7, 'Anguilla'), (8, 'Antarctica'), (9, 'Antigua And Barbuda'), (10, 'Argentina'), (11, 'Armenia'), (12, 'Aruba'), (13, 'Australia'), (14, 'Austria'), (15, 'Azerbaijan'), (16, 'Bahamas'), (17, 'Bahrain'), (18, 'Bangladesh'), (19, 'Barbados'), (20, 'Belarus'), (21, 'Belgium'), (22, 'Belize'), (23, 'Benin'), (24, 'Bermuda'), (25, 'Bhutan'), (26, 'Bolivia'), (27, 'Bosnia And Herzegowina'), (28, 'Botswana'), (29, 'Bouvet Island'), (30, 'Brazil'), (31, 'Brunei Darussalam'), (32, 'Bulgaria'), (33, 'Burkina Faso'), (34, 'Burundi'), (35, 'Cambodia'), (36, 'Cameroon'), (37, 'Canada'), (38, 'Cape Verde'), (39, 'Cayman Islands'), (40, 'Central African Rep'), (41, 'Chad'), (42, 'Chile'), (43, 'China'), (44, 'Christmas Island'), (45, 'Cocos Islands'), (46, 'Colombia'), (47, 'Comoros'), (48, 'Congo'), (49, 'Cook Islands'), (50, 'Costa Rica'), (51, 'Cote D`ivoire'), (52, 'Croatia'), (53, 'Cuba'), (54, 'Cyprus'), (55, 'Czech Republic'), (56, 'Denmark'), (57, 'Djibouti'), (58, 'Dominica'), (59, 'Dominican Republic'), (60, 'East Timor'), (61, 'Ecuador'), (62, 'Egypt'), (63, 'El Salvador'), (64, 'Equatorial Guinea'), (65, 'Eritrea'), (66, 'Estonia'), (67, 'Ethiopia'), (68, 'Falkland Islands (Malvinas)'), (69, 'Faroe Islands'), (70, 'Fiji'), (71, 'Finland'), (72, 'France'), (73, 'French Guiana'), (74, 'French Polynesia'), (75, 'French S. Territories'), (76, 'Gabon'), (77, 'Gambia'), (78, 'Georgia'), (79, 'Germany'), (80, 'Ghana'), (81, 'Gibraltar'), (82, 'Greece'), (83, 'Greenland'), (84, 'Grenada'), (85, 'Guadeloupe'), (86, 'Guam'), (87, 'Guatemala'), (88, 'Guinea'), (89, 'Guinea-bissau'), (90, 'Guyana'), (91, 'Haiti'), (92, 'Honduras'), (93, 'Hong Kong'), (94, 'Hungary'), (95, 'Iceland'), (96, 'India'), (97, 'Indonesia'), (98, 'Iran'), (99, 'Iraq'), (100, 'Ireland'), (101, 'Israel'), (102, 'Italy'), (103, 'Jamaica'), (104, 'Japan'), (105, 'Jordan'), (106, 'Kazakhstan'), (107, 'Kenya'), (108, 'Kiribati'), (109, 'Korea (North)'), (110, 'Korea (South)'), (111, 'Kuwait'), (112, 'Kyrgyzstan'), (113, 'Laos'), (114, 'Latvia'), (115, 'Lebanon'), (116, 'Lesotho'), (117, 'Liberia'), (118, 'Libya'), (119, 'Liechtenstein'), (120, 'Lithuania'), (121, 'Luxembourg'), (122, 'Macau'), (123, 'Macedonia'), (124, 'Madagascar'), (125, 'Malawi'), (126, 'Malaysia'), (127, 'Maldives'), (128, 'Mali'), (129, 'Malta'), (130, 'Marshall Islands'), (131, 'Martinique'), (132, 'Mauritania'), (133, 'Mauritius'), (134, 'Mayotte'), (135, 'Mexico'), (136, 'Micronesia'), (137, 'Moldova'), (138, 'Monaco'), (139, 'Mongolia'), (140, 'Montserrat'), (141, 'Morocco'), (142, 'Mozambique'), (143, 'Myanmar'), (144, 'Namibia'), (145, 'Nauru'), (146, 'Nepal'), (147, 'Netherlands'), (148, 'Netherlands Antilles'), (149, 'New Caledonia'), (150, 'New Zealand'), (151, 'Nicaragua'), (152, 'Niger'), (153, 'Nigeria'), (154, 'Niue'), (155, 'Norfolk Island'), (156, 'Northern Mariana Islands'), (157, 'Norway'), (158, 'Oman'), (159, 'Pakistan'), (160, 'Palau'), (161, 'Panama'), (162, 'Papua New Guinea'), (163, 'Paraguay'), (164, 'Peru'), (165, 'Philippines'), (166, 'Pitcairn'), (167, 'Poland'), (168, 'Portugal'), (169, 'Puerto Rico'), (170, 'Qatar'), (171, 'Reunion'), (172, 'Romania'), (173, 'Russian Federation'), (174, 'Rwanda'), (175, 'Saint Kitts And Nevis'), (176, 'Saint Lucia'), (177, 'St Vincent/Grenadines'), (178, 'Samoa'), (179, 'San Marino'), (180, 'Sao Tome'), (181, 'Saudi Arabia'), (182, 'Senegal'), (183, 'Seychelles'), (184, 'Sierra Leone'), (185, 'Singapore'), (186, 'Slovakia'), (187, 'Slovenia'), (188, 'Solomon Islands'), (189, 'Somalia'), (190, 'South Africa'), (191, 'Spain'), (192, 'Sri Lanka'), (193, 'St. Helena'), (194, 'St.Pierre'), (195, 'Sudan'), (196, 'Suriname'), (197, 'Swaziland'), (198, 'Sweden'), (199, 'Switzerland'), (200, 'Syrian Arab Republic'), (201, 'Taiwan'), (202, 'Tajikistan'), (203, 'Tanzania'), (204, 'Thailand'), (205, 'Togo'), (206, 'Tokelau'), (207, 'Tonga'), (208, 'Trinidad And Tobago'), (209, 'Tunisia'), (210, 'Turkey'), (211, 'Turkmenistan'), (212, 'Tuvalu'), (213, 'Uganda'), (214, 'Ukraine'), (215, 'United Arab Emirates'), (216, 'United Kingdom'), (217, 'United States'), (218, 'Uruguay'), (219, 'Uzbekistan'), (220, 'Vanuatu'), (221, 'Vatican City State'), (222, 'Venezuela'), (223, 'Viet Nam'), (224, 'Virgin Islands (British)'), (225, 'Virgin Islands (U.S.)'), (226, 'Western Sahara'), (227, 'Yemen'), (228, 'Yugoslavia'), (229, 'Zaire'), (230, 'Zambia'), (231, 'Zimbabwe')], null=True, verbose_name='country')),
                ('birthday', models.DateField(blank=True, null=True)),
                ('gender', models.IntegerField(blank=True, choices=[(1, 'Female'), (2, 'Male'), (3, 'Non-binary'), (4, 'Transgender'), (5, 'Intersex'), (6, 'I prefer not to say')], null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'profile',
                'verbose_name_plural': 'profiles',
            },
        ),
    ]
